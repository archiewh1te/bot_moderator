import datetime
from aiogram import types
from asyncpg import UniqueViolationError
from data import config
from loader import bot
from utils.db_api.db_base import db
from utils.db_api.schemas.chat_actions import ChatAction
from utils.db_api.schemas.chat_user import ChatUser


# –î–æ–±–∞–≤—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —á–∞—Ç–∞ –≤ –ë–î
async def add_chat_user(user_id: int, first_name: str, last_name: str, user_name: str, status: str, reputation: int, total_help: int, mutes: int, last_rep_boost: datetime,  last_help_boost: datetime):
    try:
        chat_user = ChatUser(user_id=user_id, first_name=first_name, last_name=last_name, reputation=reputation, user_name=user_name, total_help=total_help, mutes=mutes,
                             last_rep_boost=last_rep_boost, last_help_boost=last_help_boost, status=status)
        await chat_user.create()
    except UniqueViolationError:
        print('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω–∞')


# –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —é–∑–µ—Ä –Ω–∞–ø–∏—Å–∞–≤—à–∏–π —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –ë–î
async def check_chat_user(message):
    if message.reply_to_message:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —é–∑–µ—Ä–∞ –∏–∑ –ë–î
        if await select_chat_user(message.reply_to_message.from_user.id) is None:
            # –ü—ã—Ç–∞–µ–º—Å—è –µ–≥–æ –¥–æ–±–∞–≤–∏—Ç—å
            await add_chat_user(user_id=message.reply_to_message.from_user.id,
                                first_name=message.reply_to_message.from_user.first_name,
                                last_name=message.reply_to_message.from_user.last_name,
                                user_name=message.reply_to_message.from_user.username,
                                status='active',
                                reputation=0,
                                total_help=0,
                                mutes=0,
                                last_rep_boost=datetime.datetime.now() - datetime.timedelta(hours=4),
                                last_help_boost=datetime.datetime.now() - datetime.timedelta(hours=4))

        else:
            pass
    else:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —é–µ–∑—Ä–∞ –∏–∑ –ë–î —Ç–æ –¥–æ–±–∞–∞–≤–ª—è–µ–º –µ–≥–æ
        if await select_chat_user(message.from_user.id) is None:
            await add_chat_user(user_id=message.from_user.id,
                                first_name=message.from_user.first_name,
                                last_name=message.from_user.last_name,
                                user_name=message.from_user.username,
                                status='active',
                                reputation=0,
                                total_help=0,
                                mutes=0,
                                last_rep_boost=datetime.datetime.now() - datetime.timedelta(hours=4),
                                last_help_boost=datetime.datetime.now() - datetime.timedelta(hours=4))
        else:
            pass


# –î–æ–±–∞–≤—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —á–∞—Ç–∞ –≤ –ë–î
async def add_chat_action(id: int, user_id: int, type: str):
    try:
        chat_action = ChatAction(id=id, user_id=user_id, type=type, added=datetime.datetime.now())
        await chat_action.create()
    except UniqueViolationError:
        print('–î–µ–π—Å—Ç–≤–∏–µ –∏–∑ —á–∞—Ç–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ –≤ –ë–î')


# –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π —é–∑–µ—Ä–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ N-—á–∞—Å–æ–≤ / –ï—Å–ª–∏ 0 —Ç–æ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è
async def count_user_violations(user_id: int, hours: int = 0):
    violations = await ChatAction.query.where(ChatAction.user_id == user_id).gino.all() # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è —é–∑–µ—Ä–∞
    if hours <= 0:
        # –ß–∏—Å–ª–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è
        count = 0
        for violation in violations:
            if violation.type in ['ads', 'bad word']:
                count += 1
        return count
    else:
        count = 0
        # –ß–∏—Å–ª–æ –Ω–∞—Ä—É—à–µ–Ω–∏–π –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ N-—á–∞—Å–æ–≤
        for violation in violations:
            # –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –≤—Å–µ–º –Ω–∞—Ä—É—à–µ–Ω–∏—è–º —é–∑–µ—Ä–∞ –∏ —Å—á–∏—Ç–∞–µ–º –≤—Å–µ –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –Ω–∞—Ä—É—à–µ–Ω—ã –º–µ–Ω–µ–µ N-—á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥
            if violation.added >= datetime.datetime.now() - datetime.timedelta(hours=hours):
                count = 0
                for violation in violations:
                    if violation.type in ['ads', 'bad word']:
                        count += 1
        return count


async def check_violations(message):
    violations = await ChatAction.query.where(ChatAction.user_id == message.from_user.id).gino.all() # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è –æ—Ç —é–∑–µ—Ä–∞
    count_bad_words = 0
    count_advertising = 0
    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–∂–¥–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞
    for violation in violations:
        if violation.added >= datetime.datetime.now() - datetime.timedelta(minutes=config.time_of_violations):
            if violation.type == 'bad word': # –ü–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞
                count_bad_words +=1
            elif violation.type == 'ads': # –†–µ–∫–ª–∞–º–∞
                count_advertising +=1
    OnlyReadPermissions = types.ChatPermissions(can_send_messages=False,
                                                can_send_media_messages=False,
                                                can_send_polls=False,
                                                can_send_other_messages=False,
                                                can_add_web_page_previews=False,
                                                can_change_info=False,
                                                can_invite_users=False,
                                                can_pin_messages=False)
    userChatActions = await ChatAction.query.where(ChatAction.user_id == message.from_user.id).gino.all()
    type = userChatActions[len(userChatActions) -1].type
    if type == 'bad word':
        if count_bad_words > 0: # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤ –ë–æ–ª—å—à–µ 0
            if count_bad_words >= 5: # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–ª–æ—Ö–∏—Ö —Å–ª–æ–≤ –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 5
                until_date = datetime.datetime.now() + datetime.timedelta(hours=config.mute_by_bad_word_time)
                await bot.restrict_chat_member(chat_id=message.chat_id,
                                               user_id=message.from_user.id,
                                               permissions=OnlyReadPermissions,
                                               until_date=until_date)
                return await message.answer(f'üë§{message.from_user.get_mention(as_html=True)} –±—ã–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è '
                                            f'–Ω–∞ {config.mute_by_bad_word_time} —á–∞—Å–æ–≤.\n'
                                            f'üì©–ü—Ä–∏—á–∏–Ω–∞: –ü–ª–æ—Ö–∏–µ —Å–ª–æ–≤–∞ –≤ —á–∞—Ç–µ.')
            else:
                return await message.answer(f'üîç –ó–∞–º–µ—á–µ–Ω–æ –ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ\n'
                                            f'üë§ –ï–≥–æ –Ω–∞–ø–∏—Å–∞–ª {message.from_user.get_mention(as_html=True)}\n'
                                            f'ü§¨ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ‚Ññ {count_bad_words}\n')
    elif type == 'ads':
        if count_advertising > 0: # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –±–æ–ª—å—à–µ 0
            if count_advertising >= 3: # –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö —Å—Å—ã–ª–æ–∫ –±–æ–ª—å—à–µ 3
                until_date = datetime.datetime.now() + datetime.timedelta(hours=config.mute_by_bad_word_time)
                await bot.restrict_chat_member(chat_id=message.chat_id,
                                               user_id=message.from_user.id,
                                               permissions=OnlyReadPermissions,
                                               until_date=until_date)
                return await message.answer(f'üë§{message.from_user.get_mention(as_html=True)} –±—ã–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è '
                                            f'–Ω–∞ {config.mute_by_ads_time} —á–∞—Å–æ–≤.\n'
                                            f'üì©–ü—Ä–∏—á–∏–Ω–∞: –†–µ–∫–ª–∞–º–∞ –≤ —á–∞—Ç–µ.')
            else:
                return await message.answer(f'üîç –ó–∞–º–µ—á–µ–Ω–∞ —Ä–µ–∫–ª–∞–º–∞ –≤ —á–∞—Ç–µ\n'
                                            f'üë§ –ù–∞–ø–∏—Å–∞–ª {message.from_user.get_mention(as_html=True)}\n'
                                            f'ü§¨ –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ ‚Ññ {count_bad_words}\n')


# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–¥–Ω—è—Ç–∏—è –ø–æ–º–æ—â–∏
async def update_last_help_boost(user_id: int):
    chatUser = await ChatUser.query.where(ChatUser.user_id == user_id).gino.first()
    await chatUser.update(last_help_boost=datetime.datetime.now()).apply()


# –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª—è–µ—Ç –¥–∞—Ç—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø–æ–¥–Ω—è—Ç–∏—è –∏–ª–∏ —Å–Ω—è—Ç–∏—è —Ä–µ–ø—É—Ç–∞—Ü–∏–∏
async def update_last_rep_boost(user_id: int):
    chatUser = await ChatUser.query.where(ChatUser.user_id == user_id).gino.first()
    await chatUser.update(last_rep_boost=datetime.datetime.now()).apply()


# –ß–∞—Ç —Å–æ–±—ã—Ç–∏–π
async def count_chat_action():
    count = await db.func.count(ChatAction.id).gino.scalar()
    return count


# –ü–æ–ª—É—á–∞–µ–º —á–∞—Ç —é–∑–µ—Ä–∞
async def select_chat_user(user_id: int):
    chat_user = await ChatUser.query.where(ChatUser.user_id == user_id).gino.first()
    return chat_user


# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–π—Ç–∏–Ω–≥ –∑–∞ –ø–æ–º–æ—â—å –Ω–∞ +1
async def add_total_help(user_id: int):
    chat_user = await select_chat_user(user_id)
    await chat_user.update(total_help=chat_user.total_help + 1).apply()


# –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é +rep
async def add_reputation(user_id: int):
    chat_user = await select_chat_user(user_id)
    await chat_user.update(reputation=chat_user.reputation + 1).apply()


# –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –ø–æ–Ω–∏–∂–∞–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é -rep
async def remove_reputation(user_id: int):
    chat_user = await select_chat_user(user_id)
    await chat_user.update(reputation=chat_user.reputation - 1).apply()




# –§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–æ–≤–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º—É—Ç–∞ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
async def add_mutes(user_id: int):
    chat_user = await select_chat_user(user_id)
    await chat_user.update(mutes=chat_user.mutes + 1).apply()

